<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koreait.matzip.restaurant.RestaurantMapper">
	<select id="selRestList" parameterType="RestaurantParam" resultType="RestaurantDMI">
		SELECT i_rest, nm, lat, lng
		FROM t_restaurant 
		WHERE lat BETWEEN #{sw_lat} AND #{ne_lat}
		AND lng BETWEEN #{sw_lng} AND #{ne_lng};
	</select>
	
  <select id="detailRest" parameterType="RestaurantParam" resultType = "RestaurantDMI">
		select A.i_rest, A.nm, A.addr, A.i_user, A.hits, 
		B.val as cd_category_nm,
		C.nm AS user_nm, 
		IFNULL(D.cnt,0) AS cnt_favorite
		from t_restaurant A
		inner join c_code_d B
		on A.cd_category = B.cd
		and B.i_m = 1
		left join t_user c
		on A.i_user = C.i_user
		LEFT JOIN (SELECT i_rest, COUNT(i_rest) AS cnt
		FROM t_user_favorite
		WHERE i_rest = #{i_rest}
		GROUP BY i_rest) D
		ON A.i_rest = D.i_rest
		WHERE A.i_rest = #{i_rest}
   </select>
   
   
   <!-- Detail안의 menu_pic 목록들을 가져오기 위한 select문  -->
   <select id="selRestRecMenus" parameterType="RestaurantParam" resultType="RestaurantRecMenuVO">
      SELECT A.i_rest, A.seq, A.menu_nm, A.menu_price, A.menu_pic
      FROM t_restaurant_recommend_menu A
      WHERE A.i_rest = #{i_rest}
      <if test="seq>0">
      	and A.seq = #{seq}
      </if>
   </select>
   
   <select id="selRestMenus" parameterType="RestaurantParam" resultType="RestaurantRecMenuVO">
      SELECT A.i_rest, A.seq, A.menu_pic
      FROM t_restaurant_menu A
      WHERE A.i_rest = #{i_rest}
      <if test="seq>0">
      	and A.seq = #{seq}
      </if>
   </select>
   
   <select id="selRestChkUser" resultType="Integer" parameterType="Integer">
   	select i_user from t_restaurant
   	where i_rest = #{i_rest}
   </select>
   
   <insert id="restInsert" parameterType="RestaurantVO">
		insert into t_restaurant
		(nm, addr, lat, lng, cd_category, i_user)
		values
		(#{nm}, #{addr}, #{lat}, #{lng}, #{cd_category}, #{i_user})
		
	</insert>
	
	<insert id="insRestRecMenu" parameterType="RestaurantParam">
   	insert into t_restaurant_recommend_menu
   	(i_rest, seq, menu_nm, menu_price, menu_pic)
   	select #{i_rest}, ifnull(max(seq),0)+1, #{menu_nm}, #{menu_price}, #{menu_pic} 
   	from t_restaurant_recommend_menu
   	where i_rest = #{i_rest}
   </insert>
   
   
   	<insert id="insMenus" parameterType="RestaurantRecMenuVO">
   	insert into t_restaurant_menu
   	(i_rest, seq, menu_pic)
   	select #{i_rest}, ifnull(max(seq),0)+1, #{menu_pic} 
   	from t_restaurant_menu
   	where i_rest = #{i_rest}
   </insert>
	
   <update id="addHits" parameterType="RestaurantParam" >
   		update t_restaurant set hits = hits +1 where i_rest = #{i_rest}
   </update>
   
   <delete id="delRecRestaurant" parameterType="RestaurantParam">
   		delete A from t_restaurant_recommend_menu A
   		inner join t_restaurant B
   		on A.i_rest = B.i_rest
   		where B.i_rest = #{i_rest}
   		and B.i_user = #{i_user}
   </delete>
   
   <delete id="delRestaurantMenu" parameterType="RestaurantParam">
   		delete A from t_restaurant_menu A
   		inner join t_restaurant B
   		on A.i_rest = B.i_rest
   		where B.i_rest = #{i_rest}
   		and B.i_user = #{i_user}
   		<if test="seq>0">
   			and A.seq = #{seq}
   		</if>
   </delete>
   
   <delete id="delRestaurant" parameterType="RestaurantParam">
   		delete from t_restaurant
   		where i_rest = #{i_rest}
   		and i_user = #{i_user}
   </delete>
   
   <delete id="ajaxDelRecMenu" parameterType="RestaurantParam">
   		delete A from t_restaurant_recommend_menu A
   		inner join t_restaurant B
   		on A.i_rest = B.i_rest
   		and B.i_user = #{i_user}
   		where A.i_rest = #{i_rest} and A.seq = #{seq}
   </delete>
   
   <delete id="ajaxDelMenu" parameterType="RestaurantParam">
   		delete from t_restaurant_menu
   		where i_rest = #{i_rest}
   		<if test="seq>0">
   		and seq = #{seq}
   		</if>
   </delete>
</mapper>